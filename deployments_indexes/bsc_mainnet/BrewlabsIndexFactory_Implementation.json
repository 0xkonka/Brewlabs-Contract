{
  "address": "0x751df56d6b126c05E5062099B43dA268c834FBb9",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "index",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "category",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexNft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "deployerNft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "deployer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeWallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        }
      ],
      "name": "IndexCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "SetBrewlabsFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "SetBrewlabsWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newNftAddr",
          "type": "address"
        }
      ],
      "name": "SetDeployerNft",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "SetDiscountMgr",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "category",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "impl",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        }
      ],
      "name": "SetImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[2]",
          "name": "limits",
          "type": "uint256[2]"
        }
      ],
      "name": "SetIndexFeeLimit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newNftAddr",
          "type": "address"
        }
      ],
      "name": "SetIndexNft",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "SetIndexOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "SetPayingInfo",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "SetSwapAggregator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "flag",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "wrapper",
          "type": "address"
        }
      ],
      "name": "SetTokenConfig",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "TreasuryChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isWhitelisted",
          "type": "bool"
        }
      ],
      "name": "Whitelisted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "addToWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "brewlabsFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "brewlabsWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "indexName",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[2]",
          "name": "fees",
          "type": "uint256[2]"
        },
        {
          "internalType": "address",
          "name": "feeWallet",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        }
      ],
      "name": "createBrewlabsIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "index",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployerNft",
      "outputs": [
        {
          "internalType": "contract IERC721",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "discountMgr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "feeLimits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "idx",
          "type": "uint256"
        }
      ],
      "name": "getIndexInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "indexCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "indexDefaultOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "indexNft",
      "outputs": [
        {
          "internalType": "contract IERC721",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_impl",
          "type": "address"
        },
        {
          "internalType": "contract IERC721",
          "name": "_indexNft",
          "type": "address"
        },
        {
          "internalType": "contract IERC721",
          "name": "_deployerNft",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_indexOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "removeFromWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "rescueTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "serviceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "flag",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "wrapper",
          "type": "address"
        }
      ],
      "name": "setAllowedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "setBrewlabsFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "setBrewlabsWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "newNftAddr",
          "type": "address"
        }
      ],
      "name": "setDeployerNft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "setDiscountManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "category",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "impl",
          "type": "address"
        }
      ],
      "name": "setImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "limits",
          "type": "uint256[2]"
        }
      ],
      "name": "setIndexFeeLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "newNftAddr",
          "type": "address"
        }
      ],
      "name": "setIndexNft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setIndexOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "setPayingToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "setServiceFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_aggregator",
          "type": "address"
        }
      ],
      "name": "setSwapAggregator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTreasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapAggregator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "wrappers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x86f6f654b4df96ce2f424dd3276e2cf1d74af0c69360aaa357e541359a89f5a4",
  "receipt": {
    "to": null,
    "from": "0xCD3b71D65D1f03F0b2c5a4e67A17347dc71141f7",
    "contractAddress": "0x751df56d6b126c05E5062099B43dA268c834FBb9",
    "transactionIndex": 81,
    "gasUsed": "2515749",
    "logsBloom": "0x
    "blockHash": "0xa40f7b18a0eef327ffed9eb394b2296401ec7ae34c33036947948d3fc83091f7",
    "transactionHash": "0x86f6f654b4df96ce2f424dd3276e2cf1d74af0c69360aaa357e541359a89f5a4",
    "logs": [],
    "blockNumber": 29553887,
    "cumulativeGasUsed": "10866466",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "0260463c7c8cf539a785493e0f5dd08b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"index\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexNft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"deployerNft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeWallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"}],\"name\":\"IndexCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"SetBrewlabsFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"SetBrewlabsWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newNftAddr\",\"type\":\"address\"}],\"name\":\"SetDeployerNft\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"SetDiscountMgr\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"SetImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[2]\",\"name\":\"limits\",\"type\":\"uint256[2]\"}],\"name\":\"SetIndexFeeLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newNftAddr\",\"type\":\"address\"}],\"name\":\"SetIndexNft\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"SetIndexOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"SetPayingInfo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"SetSwapAggregator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"flag\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wrapper\",\"type\":\"address\"}],\"name\":\"SetTokenConfig\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"TreasuryChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"name\":\"Whitelisted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedTokens\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"brewlabsFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"brewlabsWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"indexName\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[2]\",\"name\":\"fees\",\"type\":\"uint256[2]\"},{\"internalType\":\"address\",\"name\":\"feeWallet\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"}],\"name\":\"createBrewlabsIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"index\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployerNft\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"discountMgr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"feeLimits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getIndexInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"indexCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"indexDefaultOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"indexNft\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_impl\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"_indexNft\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"_deployerNft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_indexOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"serviceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"wrapper\",\"type\":\"address\"}],\"name\":\"setAllowedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setBrewlabsFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"setBrewlabsWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"newNftAddr\",\"type\":\"address\"}],\"name\":\"setDeployerNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setDiscountManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"setImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"limits\",\"type\":\"uint256[2]\"}],\"name\":\"setIndexFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"newNftAddr\",\"type\":\"address\"}],\"name\":\"setIndexNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setIndexOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"setPayingToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setServiceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aggregator\",\"type\":\"address\"}],\"name\":\"setSwapAggregator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAggregator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wrappers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"rescueTokens(address)\":{\"params\":{\"_token\":\": token address\"}},\"setAllowedToken(address,uint8,address)\":{\"params\":{\"flag\":\": staked token address     0 - DISABLED      : Not supported.     1 - SWAPPABLE     : Swappable token with BNB.     2 - LIQUID_TOKEN  : Token can be converted to BNB by wrapping.\",\"token\":\": staked token address\",\"wrapper\":\": wrap contract for LSDs\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowedTokens(address)\":{\"notice\":\"0 - DISABLED      : Tokens are not accepted. 1 - SWAPPABLE   : Token swap possible directly to BNB. 2 - LIQUID_TOKEN  : Token can be converted to BNB by burning.\"},\"rescueTokens(address)\":{\"notice\":\"Emergency withdraw tokens.\"},\"setAllowedToken(address,uint8,address)\":{\"notice\":\"Initialize the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/indexes/BrewlabsIndexFactory.sol\":\"BrewlabsIndexFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/Clones.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\\n            // of the `implementation` address with the bytecode before the address.\\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\\n            instance := create(0, 0x09, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\\n            // of the `implementation` address with the bytecode before the address.\\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\\n            instance := create2(0, 0x09, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(add(ptr, 0x38), deployer)\\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\\n            mstore(add(ptr, 0x14), implementation)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\\n            mstore(add(ptr, 0x58), salt)\\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\\n            predicted := keccak256(add(ptr, 0x43), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/indexes/BrewlabsIndexFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\nimport {Clones} from \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\r\\nimport {SafeERC20, IERC20} from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport {IERC721} from \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\nimport {OwnableUpgradeable} from \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\r\\n\\r\\ninterface IBrewlabsIndexNft {\\r\\n    function setMinterRole(address minter, bool status) external;\\r\\n}\\r\\n\\r\\ncontract BrewlabsIndexFactory is OwnableUpgradeable {\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    // uint256 private constant FEE_DENOMIATOR = 10000;\\r\\n\\r\\n    mapping(uint256 => address) public implementation;\\r\\n    mapping(uint256 => uint256) public version;\\r\\n\\r\\n    IERC721 public indexNft;\\r\\n    IERC721 public deployerNft;\\r\\n    address public indexDefaultOwner;\\r\\n\\r\\n    address public payingToken;\\r\\n    uint256 public serviceFee;\\r\\n    address public treasury;\\r\\n\\r\\n    address public swapAggregator;\\r\\n    address public discountMgr;\\r\\n    address public brewlabsWallet;\\r\\n    uint256 public brewlabsFee;\\r\\n    uint256[2] public feeLimits;\\r\\n\\r\\n    struct IndexInfo {\\r\\n        address index;\\r\\n        string name;\\r\\n        uint256 category;\\r\\n        uint256 version;\\r\\n        address indexNft;\\r\\n        address deployerNft;\\r\\n        address[] tokens;\\r\\n        address deployer;\\r\\n        uint256 createdAt;\\r\\n    }\\r\\n\\r\\n    IndexInfo[] private indexInfo;\\r\\n    mapping(address => bool) public whitelist;\\r\\n\\r\\n    /**\\r\\n     * 0 - DISABLED      : Tokens are not accepted.\\r\\n     * 1 - SWAPPABLE   : Token swap possible directly to BNB.\\r\\n     * 2 - LIQUID_TOKEN  : Token can be converted to BNB by burning.\\r\\n     */\\r\\n    mapping(address => uint8) public allowedTokens;\\r\\n    mapping(address => address) public wrappers;\\r\\n\\r\\n    event IndexCreated(\\r\\n        address indexed index,\\r\\n        string name,\\r\\n        uint256 category,\\r\\n        uint256 version,\\r\\n        address[] tokens,\\r\\n        address indexNft,\\r\\n        address deployerNft,\\r\\n        address deployer,\\r\\n        address feeWallet,\\r\\n        bool isPrivate\\r\\n    );\\r\\n    event SetIndexNft(address newNftAddr);\\r\\n    event SetDeployerNft(address newNftAddr);\\r\\n    event SetIndexOwner(address newOwner);\\r\\n    event SetBrewlabsFee(uint256 fee);\\r\\n    event SetBrewlabsWallet(address wallet);\\r\\n    event SetIndexFeeLimit(uint256[2] limits);\\r\\n    event SetPayingInfo(address token, uint256 price);\\r\\n    event SetImplementation(uint256 category, address impl, uint256 version);\\r\\n    event SetDiscountMgr(address addr);\\r\\n    event SetSwapAggregator(address addr);\\r\\n    event TreasuryChanged(address addr);\\r\\n\\r\\n    event SetTokenConfig(address token, uint8 flag, address wrapper);\\r\\n    event Whitelisted(address indexed account, bool isWhitelisted);\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    function initialize(\\r\\n        address _impl,\\r\\n        IERC721 _indexNft,\\r\\n        IERC721 _deployerNft,\\r\\n        address _token,\\r\\n        uint256 _price,\\r\\n        address _indexOwner\\r\\n    ) external initializer {\\r\\n        require(_impl != address(0x0), \\\"Invalid implementation\\\");\\r\\n        require(address(_indexNft) != address(0x0), \\\"Invalid index NFT\\\");\\r\\n        require(address(_deployerNft) != address(0x0), \\\"Invalid deployer NFT\\\");\\r\\n\\r\\n        __Ownable_init();\\r\\n\\r\\n        swapAggregator = 0xe91816fDE9DBcF834125A17cf3a22735Bee15a2b;\\r\\n        brewlabsWallet = 0xE1f1dd010BBC2860F81c8F90Ea4E38dB949BB16F;\\r\\n        brewlabsFee = 25; // 0.25%\\r\\n        feeLimits[0] = 25; // 0.25%\\r\\n        feeLimits[1] = 100; // 1%\\r\\n\\r\\n        payingToken = _token;\\r\\n        serviceFee = _price;\\r\\n        treasury = _indexOwner;\\r\\n        indexDefaultOwner = _indexOwner;\\r\\n\\r\\n        indexNft = _indexNft;\\r\\n        deployerNft = _deployerNft;\\r\\n        implementation[0] = _impl;\\r\\n        version[0] = 1;\\r\\n        emit SetImplementation(0, _impl, version[0]);\\r\\n    }\\r\\n\\r\\n    function createBrewlabsIndex(\\r\\n        string memory indexName,\\r\\n        address[] memory tokens,\\r\\n        uint256[2] memory fees,\\r\\n        address feeWallet,\\r\\n        bool isPrivate\\r\\n    ) external payable returns (address index) {\\r\\n        uint256 curCategory = 0;\\r\\n        require(implementation[curCategory] != address(0x0), \\\"Not initialized yet\\\");\\r\\n\\r\\n        require(tokens.length <= 5, \\\"Exceed token limit\\\");\\r\\n        require(fees[0] <= feeLimits[0] && fees[1] <= feeLimits[1], \\\"Cannot exeed fee limit\\\");\\r\\n\\r\\n        for (uint256 i = 0; i < tokens.length; i++) {\\r\\n            require(isContract(address(tokens[i])), \\\"Invalid token\\\");\\r\\n            for (uint256 j = i + 1; j < tokens.length; j++) {\\r\\n                require(tokens[i] != tokens[j], \\\"Cannot use same token\\\");\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (!whitelist[msg.sender]) {\\r\\n            _transferServiceFee();\\r\\n        }\\r\\n\\r\\n        bytes32 salt = keccak256(abi.encodePacked(msg.sender, tokens.length, tokens[0], block.number, block.timestamp));\\r\\n\\r\\n        index = Clones.cloneDeterministic(implementation[curCategory], salt);\\r\\n        (bool success,) = index.call(\\r\\n            abi.encodeWithSignature(\\r\\n                \\\"initialize(string,address,address[],address,address,uint256[2],address,address,address)\\\",\\r\\n                indexName,\\r\\n                swapAggregator,\\r\\n                tokens,\\r\\n                address(indexNft),\\r\\n                address(deployerNft),\\r\\n                fees,\\r\\n                indexDefaultOwner,\\r\\n                msg.sender,\\r\\n                feeWallet\\r\\n            )\\r\\n        );\\r\\n        require(success, \\\"Initialization failed\\\");\\r\\n\\r\\n        IBrewlabsIndexNft(address(indexNft)).setMinterRole(index, true);\\r\\n        IBrewlabsIndexNft(address(deployerNft)).setMinterRole(index, true);\\r\\n\\r\\n        indexInfo.push(\\r\\n            IndexInfo(\\r\\n                index,\\r\\n                indexName,\\r\\n                curCategory,\\r\\n                version[curCategory],\\r\\n                address(indexNft),\\r\\n                address(deployerNft),\\r\\n                tokens,\\r\\n                msg.sender,\\r\\n                block.timestamp\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit IndexCreated(\\r\\n            index,\\r\\n            indexName,\\r\\n            curCategory,\\r\\n            version[curCategory],\\r\\n            tokens,\\r\\n            address(indexNft),\\r\\n            address(deployerNft),\\r\\n            msg.sender,\\r\\n            feeWallet,\\r\\n            isPrivate\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function indexCount() external view returns (uint256) {\\r\\n        return indexInfo.length;\\r\\n    }\\r\\n\\r\\n    function getIndexInfo(uint256 idx)\\r\\n        external\\r\\n        view\\r\\n        returns (address, string memory, uint256, address, address, address[] memory, address, uint256)\\r\\n    {\\r\\n        IndexInfo memory _indexInfo = indexInfo[idx];\\r\\n        return (\\r\\n            _indexInfo.index,\\r\\n            _indexInfo.name,\\r\\n            _indexInfo.category,\\r\\n            _indexInfo.indexNft,\\r\\n            _indexInfo.deployerNft,\\r\\n            _indexInfo.tokens,\\r\\n            _indexInfo.deployer,\\r\\n            _indexInfo.createdAt\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function setImplementation(uint256 category, address impl) external onlyOwner {\\r\\n        require(isContract(impl), \\\"Invalid implementation\\\");\\r\\n        implementation[category] = impl;\\r\\n        version[category] = version[category] + 1;\\r\\n        emit SetImplementation(category, impl, version[category]);\\r\\n    }\\r\\n\\r\\n    function setIndexNft(IERC721 newNftAddr) external onlyOwner {\\r\\n        require(address(newNftAddr) != address(0x0), \\\"Invalid NFT\\\");\\r\\n        indexNft = newNftAddr;\\r\\n        emit SetIndexNft(address(newNftAddr));\\r\\n    }\\r\\n\\r\\n    function setDeployerNft(IERC721 newNftAddr) external onlyOwner {\\r\\n        require(address(newNftAddr) != address(0x0), \\\"Invalid NFT\\\");\\r\\n        deployerNft = newNftAddr;\\r\\n        emit SetDeployerNft(address(newNftAddr));\\r\\n    }\\r\\n\\r\\n    function setBrewlabsWallet(address wallet) external onlyOwner {\\r\\n        require(wallet != address(0x0), \\\"Invalid wallet\\\");\\r\\n        brewlabsWallet = wallet;\\r\\n        emit SetBrewlabsWallet(wallet);\\r\\n    }\\r\\n\\r\\n    function setBrewlabsFee(uint256 fee) external onlyOwner {\\r\\n        require(fee <= feeLimits[0], \\\"fee cannot exceed limit\\\");\\r\\n        brewlabsFee = fee;\\r\\n        emit SetBrewlabsFee(brewlabsFee);\\r\\n    }\\r\\n\\r\\n    function setSwapAggregator(address _aggregator) external onlyOwner {\\r\\n        require(_aggregator != address(0x0), \\\"Invalid address\\\");\\r\\n\\r\\n        swapAggregator = _aggregator;\\r\\n        emit SetSwapAggregator(_aggregator);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Initialize the contract\\r\\n     * @param token: staked token address\\r\\n     * @param flag: staked token address\\r\\n     *     0 - DISABLED      : Not supported.\\r\\n     *     1 - SWAPPABLE     : Swappable token with BNB.\\r\\n     *     2 - LIQUID_TOKEN  : Token can be converted to BNB by wrapping.\\r\\n     * @param wrapper: wrap contract for LSDs\\r\\n     */\\r\\n    function setAllowedToken(address token, uint8 flag, address wrapper) external onlyOwner {\\r\\n        require(token != address(0x0), \\\"Invalid token\\\");\\r\\n        require(flag < 3, \\\"Invalid type\\\");\\r\\n        require(flag != 2 || wrapper != address(0x0), \\\"Invalid wrapper\\\");\\r\\n\\r\\n        allowedTokens[token] = flag;\\r\\n        if (flag == 2) wrappers[token] = wrapper;\\r\\n        emit SetTokenConfig(token, flag, wrapper);\\r\\n    }\\r\\n\\r\\n    function setIndexFeeLimit(uint256[2] memory limits) external onlyOwner {\\r\\n        require(limits[0] <= 1000 && limits[1] <= 1000, \\\"fee limit cannot exceed 10%\\\");\\r\\n        feeLimits = limits;\\r\\n        emit SetIndexFeeLimit(feeLimits);\\r\\n    }\\r\\n\\r\\n    function setIndexOwner(address newOwner) external onlyOwner {\\r\\n        require(newOwner != address(0x0), \\\"Invalid address\\\");\\r\\n        indexDefaultOwner = newOwner;\\r\\n        emit SetIndexOwner(newOwner);\\r\\n    }\\r\\n\\r\\n    function setDiscountManager(address addr) external onlyOwner {\\r\\n        require(addr == address(0x0) || isContract(addr), \\\"Invalid discount manager\\\");\\r\\n\\r\\n        discountMgr = addr;\\r\\n        emit SetDiscountMgr(addr);\\r\\n    }\\r\\n\\r\\n    function setServiceFee(uint256 fee) external onlyOwner {\\r\\n        serviceFee = fee;\\r\\n        emit SetPayingInfo(payingToken, serviceFee);\\r\\n    }\\r\\n\\r\\n    function setPayingToken(address token) external onlyOwner {\\r\\n        payingToken = token;\\r\\n        emit SetPayingInfo(payingToken, serviceFee);\\r\\n    }\\r\\n\\r\\n    function addToWhitelist(address _addr) external onlyOwner {\\r\\n        whitelist[_addr] = true;\\r\\n        emit Whitelisted(_addr, true);\\r\\n    }\\r\\n\\r\\n    function removeFromWhitelist(address _addr) external onlyOwner {\\r\\n        whitelist[_addr] = false;\\r\\n        emit Whitelisted(_addr, false);\\r\\n    }\\r\\n\\r\\n    function setTreasury(address newTreasury) external onlyOwner {\\r\\n        require(newTreasury != address(0x0), \\\"Invalid address\\\");\\r\\n\\r\\n        treasury = newTreasury;\\r\\n        emit TreasuryChanged(newTreasury);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Emergency withdraw tokens.\\r\\n     * @param _token: token address\\r\\n     */\\r\\n    function rescueTokens(address _token) external onlyOwner {\\r\\n        if (_token == address(0x0)) {\\r\\n            uint256 _ethAmount = address(this).balance;\\r\\n            payable(msg.sender).transfer(_ethAmount);\\r\\n        } else {\\r\\n            uint256 _tokenAmount = IERC20(_token).balanceOf(address(this));\\r\\n            IERC20(_token).safeTransfer(msg.sender, _tokenAmount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _transferServiceFee() internal {\\r\\n        if (payingToken == address(0x0)) {\\r\\n            require(msg.value >= serviceFee, \\\"Not enough fee\\\");\\r\\n            payable(treasury).transfer(serviceFee);\\r\\n        } else {\\r\\n            IERC20(payingToken).safeTransferFrom(msg.sender, treasury, serviceFee);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // check if address is contract\\r\\n    function isContract(address _addr) internal view returns (bool) {\\r\\n        uint32 size;\\r\\n        assembly {\\r\\n            size := extcodesize(_addr)\\r\\n        }\\r\\n        return (size > 0);\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n}\\r\\n\",\"keccak256\":\"0x4c7a94cd9c3b833b0a5642098dc819c33e6cc787ec1554f7871e18a94d6aea87\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612c8a806100206000396000f3fe6080604052600436106102235760003560e01c806376b9a7611161012e578063ba64248e116100ab578063e43252d71161006f578063e43252d7146106c5578063e744092e146106e5578063f083b09614610727578063f0f4426014610747578063f2fde38b1461076757600080fd5b8063ba64248e14610618578063c4c7154214610638578063d3cbde3114610658578063d432442c14610685578063dddc9ede146106a557600080fd5b80639b19251a116100f25780639b19251a14610518578063a3603a8e14610558578063ac9a0b2614610578578063b41e991a146105ae578063b81155b5146105e457600080fd5b806376b9a761146104915780638ab1d681146104b15780638abdf5aa146104d15780638c42aea8146104e75780638da5cb5b146104fa57600080fd5b80634cd2c83b116101bc5780635cdf76f8116101805780635cdf76f8146103fc57806361d027b31461041c578063649cc8d21461043c578063715018a61461045c5780637404b8441461047157600080fd5b80634cd2c83b1461036657806352f4c6101461037c57806353c425c11461039c578063555d6331146103bc5780635ace5813146103dc57600080fd5b8062ae3bf81461022f57806301a362a8146102515780630848818b1461028757806317ce4f1e146102a757806319a0bc4a146102c757806319fca468146102e657806328879a65146103065780632f5e2b1c1461032657806336c324aa1461034657600080fd5b3661022a57005b600080fd5b34801561023b57600080fd5b5061024f61024a366004612438565b610787565b005b34801561025d57600080fd5b50606e54610271906001600160a01b031681565b60405161027e919061245c565b60405180910390f35b34801561029357600080fd5b5061024f6102a2366004612438565b61085c565b3480156102b357600080fd5b5061024f6102c2366004612438565b6108c0565b3480156102d357600080fd5b506073545b60405190815260200161027e565b3480156102f257600080fd5b50606854610271906001600160a01b031681565b34801561031257600080fd5b5061024f610321366004612470565b61097b565b34801561033257600080fd5b5061024f610341366004612438565b610af3565b34801561035257600080fd5b5061024f610361366004612578565b610b8d565b34801561037257600080fd5b506102d860705481565b34801561038857600080fd5b5061024f610397366004612594565b610c38565b3480156103a857600080fd5b5061024f6103b73660046125ad565b610cc1565b3480156103c857600080fd5b50606a54610271906001600160a01b031681565b3480156103e857600080fd5b50606d54610271906001600160a01b031681565b34801561040857600080fd5b5061024f610417366004612594565b610fd6565b34801561042857600080fd5b50606c54610271906001600160a01b031681565b34801561044857600080fd5b5061024f610457366004612438565b611022565b34801561046857600080fd5b5061024f61109b565b34801561047d57600080fd5b5061024f61048c366004612438565b6110af565b34801561049d57600080fd5b5061024f6104ac366004612438565b611128565b3480156104bd57600080fd5b5061024f6104cc366004612438565b6111a1565b3480156104dd57600080fd5b506102d8606b5481565b6102716104f53660046126bd565b6111ff565b34801561050657600080fd5b506033546001600160a01b0316610271565b34801561052457600080fd5b50610548610533366004612438565b60746020526000908152604090205460ff1681565b604051901515815260200161027e565b34801561056457600080fd5b50606954610271906001600160a01b031681565b34801561058457600080fd5b50610271610593366004612594565b6065602052600090815260409020546001600160a01b031681565b3480156105ba57600080fd5b506102716105c9366004612438565b6076602052600090815260409020546001600160a01b031681565b3480156105f057600080fd5b506106046105ff366004612594565b611926565b60405161027e989796959493929190612844565b34801561062457600080fd5b50606f54610271906001600160a01b031681565b34801561064457600080fd5b5061024f610653366004612438565b611b11565b34801561066457600080fd5b506102d8610673366004612594565b60666020526000908152604090205481565b34801561069157600080fd5b506102d86106a0366004612594565b611b8a565b3480156106b157600080fd5b50606754610271906001600160a01b031681565b3480156106d157600080fd5b5061024f6106e0366004612438565b611ba1565b3480156106f157600080fd5b50610715610700366004612438565b60756020526000908152604090205460ff1681565b60405160ff909116815260200161027e565b34801561073357600080fd5b5061024f6107423660046128ab565b611c00565b34801561075357600080fd5b5061024f610762366004612438565b611cb8565b34801561077357600080fd5b5061024f610782366004612438565b611d31565b61078f611da7565b6001600160a01b0381166107d1576040514790339082156108fc029083906000818181858888f193505050501580156107cc573d6000803e3d6000fd5b505050565b6040516370a0823160e01b81526000906001600160a01b038316906370a082319061080090309060040161245c565b602060405180830381865afa15801561081d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084191906128db565b90506108576001600160a01b0383163383611e01565b505b50565b610864611da7565b606a80546001600160a01b0319166001600160a01b038316908117909155606b546040517fff99838ad48c26fbba7c9103c33d60b6e6fe5c9e3e5f82592ffcea51777fccec926108b59290916128f4565b60405180910390a150565b6108c8611da7565b6001600160a01b03811615806108e45750803b63ffffffff1615155b6109305760405162461bcd60e51b815260206004820152601860248201527724b73b30b634b2103234b9b1b7bab73a1036b0b730b3b2b960411b60448201526064015b60405180910390fd5b606e80546001600160a01b0319166001600160a01b0383161790556040517fcbcaef6e2a342ec0705123d095e73fc9a8f2f790ce0e650e02c4e5f7c4b5592e906108b590839061245c565b610983611da7565b6001600160a01b0383166109a95760405162461bcd60e51b81526004016109279061290d565b60038260ff16106109eb5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964207479706560a01b6044820152606401610927565b8160ff166002141580610a0657506001600160a01b03811615155b610a445760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b2103bb930b83832b960891b6044820152606401610927565b6001600160a01b0383166000908152607560205260409020805460ff191660ff8416908117909155600203610aa2576001600160a01b03838116600090815260766020526040902080546001600160a01b0319169183169190911790555b604080516001600160a01b03858116825260ff8516602083015283168183015290517f1a4315afbcea26ce22c71adfd073587f9d492f5b5d22b26f4bd11e6261a32ecb9181900360600190a1505050565b610afb611da7565b6001600160a01b038116610b425760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd85b1b195d60921b6044820152606401610927565b606f80546001600160a01b0319166001600160a01b0383161790556040517f04d877fc28d5266225dad2da3d458a663d3853e0d3505280c683cc9e0610b544906108b590839061245c565b610b95611da7565b80516103e810801590610bae575060208101516103e810155b610bfa5760405162461bcd60e51b815260206004820152601b60248201527f666565206c696d69742063616e6e6f74206578636565642031302500000000006044820152606401610927565b610c0760718260026122f8565b507ffe4aca700e50d38da718a7188ff6eb9ac0e00d3a16d12313c1202a5906900e2c60716040516108b5919061294a565b610c40611da7565b607154811115610c8c5760405162461bcd60e51b81526020600482015260176024820152761999594818d85b9b9bdd08195e18d95959081b1a5b5a5d604a1b6044820152606401610927565b60708190556040518181527fddec4ff3a78fea0be6868ce5c32d8ac94ad2a87d6100339cc7415e72e9f67f5f906020016108b5565b600054610100900460ff1615808015610ce15750600054600160ff909116105b80610cfb5750303b158015610cfb575060005460ff166001145b610d5e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610927565b6000805460ff191660011790558015610d81576000805461ff0019166101001790555b6001600160a01b038716610da75760405162461bcd60e51b81526004016109279061297b565b6001600160a01b038616610df15760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081a5b99195e08139195607a1b6044820152606401610927565b6001600160a01b038516610e3e5760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a590819195c1b1bde595c8813919560621b6044820152606401610927565b610e46611e57565b606d805473e91816fde9dbcf834125a17cf3a22735bee15a2b6001600160a01b031991821617909155606f805473e1f1dd010bbc2860f81c8f90ea4e38db949bb16f908316179055601960708190556071556064607255606a805482166001600160a01b0387811691909117909155606b859055606c80548316858316908117909155606980548416909117905560678054831689831617905560688054831688831617905560008080527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b8054909316918a1691909117909155606660205260017f6f48904484b35701cf1f41ad9068b394adf7e2f8a59d2309a04d10a155eaa72b8190556040517fbac8f345f4aec25f8181306d1e285bd71897176374cea36669605788ca57b29592610f7f9290918b91906129ab565b60405180910390a18015610fcd576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b610fde611da7565b606b819055606a546040517fff99838ad48c26fbba7c9103c33d60b6e6fe5c9e3e5f82592ffcea51777fccec916108b5916001600160a01b039091169084906128f4565b61102a611da7565b6001600160a01b0381166110505760405162461bcd60e51b8152600401610927906129ca565b606d80546001600160a01b0319166001600160a01b0383161790556040517feffeb6d84590144cbff5304be4487d09001a14ab33344037bafcf8129f1cb851906108b590839061245c565b6110a3611da7565b6110ad6000611e86565b565b6110b7611da7565b6001600160a01b0381166110dd5760405162461bcd60e51b8152600401610927906129f3565b606780546001600160a01b0319166001600160a01b0383161790556040517ff7b003cc430c1bd951f3513f1b4524bd8974b4ccf0f8173e04c8672c3174bea9906108b590839061245c565b611130611da7565b6001600160a01b0381166111565760405162461bcd60e51b8152600401610927906129ca565b606980546001600160a01b0319166001600160a01b0383161790556040517fb4373cff5122ed52c1a5960d3077d20384021b17809e515753de92bd47db9066906108b590839061245c565b6111a9611da7565b6001600160a01b0381166000818152607460209081526040808320805460ff19169055519182527fa54714518c5d275fdcd3d2a461e4858e4e8cb04fb93cd0bca9d6d34115f2644091015b60405180910390a250565b600080805260656020527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b5481906001600160a01b03166112785760405162461bcd60e51b8152602060048201526013602482015272139bdd081a5b9a5d1a585b1a5e9959081e595d606a1b6044820152606401610927565b6005865111156112bf5760405162461bcd60e51b8152602060048201526012602482015271115e18d95959081d1bdad95b881b1a5b5a5d60721b6044820152606401610927565b6071548551118015906112d85750607254602086015111155b61131d5760405162461bcd60e51b815260206004820152601660248201527510d85b9b9bdd08195e19595908199959481b1a5b5a5d60521b6044820152606401610927565b60005b86518110156114385761135387828151811061133e5761133e612934565b602002602001015163ffffffff903b16151590565b61136f5760405162461bcd60e51b81526004016109279061290d565b600061137c826001612a2e565b90505b87518110156114255787818151811061139a5761139a612934565b60200260200101516001600160a01b03168883815181106113bd576113bd612934565b60200260200101516001600160a01b0316036114135760405162461bcd60e51b815260206004820152601560248201527421b0b73737ba103ab9b29039b0b6b2903a37b5b2b760591b6044820152606401610927565b8061141d81612a46565b91505061137f565b508061143081612a46565b915050611320565b503360009081526074602052604090205460ff1661145857611458611ed8565b60003387518860008151811061147057611470612934565b6020908102919091018101516040516bffffffffffffffffffffffff19606095861b811693820193909352603481019390935290921b909116605482015243606882015242608882015260a80160408051601f198184030181529181528151602092830120600085815260659093529120549091506114f8906001600160a01b031682611f8b565b92506000836001600160a01b031689606d60009054906101000a90046001600160a01b03168a606760009054906101000a90046001600160a01b0316606860009054906101000a90046001600160a01b03168c606960009054906101000a90046001600160a01b0316338e60405160240161157b99989796959493929190612a5f565b60408051601f198184030181529181526020820180516001600160e01b0316634ad5eda960e11b179052516115b09190612b11565b6000604051808303816000865af19150503d80600081146115ed576040519150601f19603f3d011682016040523d82523d6000602084013e6115f2565b606091505b505090508061163b5760405162461bcd60e51b8152602060048201526015602482015274125b9a5d1a585b1a5e985d1a5bdb8819985a5b1959605a1b6044820152606401610927565b60675460405163658bbd8f60e11b81526001600160a01b038681166004830152600160248301529091169063cb177b1e90604401600060405180830381600087803b15801561168957600080fd5b505af115801561169d573d6000803e3d6000fd5b505060685460405163658bbd8f60e11b81526001600160a01b03888116600483015260016024830152909116925063cb177b1e9150604401600060405180830381600087803b1580156116ef57600080fd5b505af1158015611703573d6000803e3d6000fd5b505060408051610120810182526001600160a01b03888116825260208083018f81528385018a905260008a81526066835294852054606085015260675483166080850152606854831660a085015260c084018f90523360e08501524261010085015260738054600181018255955283517ff79bde9ddd17963ebce6f7d021d60de7c2bd0db944d23c900c0c0e775f530052600990960295860180546001600160a01b031916919094161783555180519396509194506117e7937ff79bde9ddd17963ebce6f7d021d60de7c2bd0db944d23c900c0c0e775f5300530192910190612336565b50604082015160028201556060820151600382015560808201516004820180546001600160a01b039283166001600160a01b03199182161790915560a084015160058401805491909316911617905560c082015180516118519160068401916020909101906123a9565b5060e08201518160070160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061010082015181600801555050836001600160a01b03167fc59d004b0160f568218f7a6c1d8e7f3ece03e1dbff3fd0c31fbfcd1cb013542a8a8560666000888152602001908152602001600020548c606760009054906101000a90046001600160a01b0316606860009054906101000a90046001600160a01b0316338e8e60405161191299989796959493929190612b2d565b60405180910390a250505095945050505050565b6000606060008060006060600080600060738a8154811061194957611949612934565b600091825260209182902060408051610120810190915260099092020180546001600160a01b03168252600181018054929391929184019161198a90612b9f565b80601f01602080910402602001604051908101604052809291908181526020018280546119b690612b9f565b8015611a035780601f106119d857610100808354040283529160200191611a03565b820191906000526020600020905b8154815290600101906020018083116119e657829003601f168201915b50505091835250506002820154602080830191909152600383015460408084019190915260048401546001600160a01b039081166060850152600585015416608084015260068401805482518185028101850190935280835260a0909401939192909190830182828015611aa057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611a82575b505050918352505060078201546001600160a01b031660208083019190915260089092015460409182015282519183015190830151608084015160a085015160c086015160e08701516101009790970151959f50939d50919b50995097509550909350915050919395975091939597565b611b19611da7565b6001600160a01b038116611b3f5760405162461bcd60e51b8152600401610927906129f3565b606880546001600160a01b0319166001600160a01b0383161790556040517fd9b677b9c9b93164c658b14fa5a5d48912dbd03c690acb1cff638697159aabcd906108b590839061245c565b60718160028110611b9a57600080fd5b0154905081565b611ba9611da7565b6001600160a01b038116600081815260746020908152604091829020805460ff1916600190811790915591519182527fa54714518c5d275fdcd3d2a461e4858e4e8cb04fb93cd0bca9d6d34115f2644091016111f4565b611c08611da7565b803b63ffffffff16611c2c5760405162461bcd60e51b81526004016109279061297b565b600082815260656020908152604080832080546001600160a01b0319166001600160a01b0386161790556066909152902054611c69906001612a2e565b60008381526066602052604090819020829055517fbac8f345f4aec25f8181306d1e285bd71897176374cea36669605788ca57b29591611cac91859185916129ab565b60405180910390a15050565b611cc0611da7565b6001600160a01b038116611ce65760405162461bcd60e51b8152600401610927906129ca565b606c80546001600160a01b0319166001600160a01b0383161790556040517fc714d22a2f08b695f81e7c707058db484aa5b4d6b4c9fd64beb10fe85832f608906108b590839061245c565b611d39611da7565b6001600160a01b038116611d9e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610927565b61085981611e86565b6033546001600160a01b031633146110ad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610927565b6107cc8363a9059cbb60e01b8484604051602401611e209291906128f4565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612028565b600054610100900460ff16611e7e5760405162461bcd60e51b815260040161092790612bd9565b6110ad6120fa565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606a546001600160a01b0316611f6757606b54341015611f2b5760405162461bcd60e51b815260206004820152600e60248201526d4e6f7420656e6f7567682066656560901b6044820152606401610927565b606c54606b546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610859573d6000803e3d6000fd5b606c54606b54606a546110ad926001600160a01b039182169233929091169061212a565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166120225760405162461bcd60e51b8152602060048201526017602482015276115490cc4c4d8dce8818dc99585d194c8819985a5b1959604a1b6044820152606401610927565b92915050565b600061207d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121689092919063ffffffff16565b8051909150156107cc578080602001905181019061209b9190612c24565b6107cc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610927565b600054610100900460ff166121215760405162461bcd60e51b815260040161092790612bd9565b6110ad33611e86565b6040516001600160a01b03808516602483015283166044820152606481018290526121629085906323b872dd60e01b90608401611e20565b50505050565b6060612177848460008561217f565b949350505050565b6060824710156121e05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610927565b600080866001600160a01b031685876040516121fc9190612b11565b60006040518083038185875af1925050503d8060008114612239576040519150601f19603f3d011682016040523d82523d6000602084013e61223e565b606091505b509150915061224f8783838761225a565b979650505050505050565b606083156122c95782516000036122c2576001600160a01b0385163b6122c25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610927565b5081612177565b61217783838151156122de5781518083602001fd5b8060405162461bcd60e51b81526004016109279190612c41565b8260028101928215612326579160200282015b8281111561232657825182559160200191906001019061230b565b506123329291506123fe565b5090565b82805461234290612b9f565b90600052602060002090601f0160209004810192826123645760008555612326565b82601f1061237d57805160ff1916838001178555612326565b82800160010185558215612326579182018281111561232657825182559160200191906001019061230b565b828054828255906000526020600020908101928215612326579160200282015b8281111561232657825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906123c9565b5b8082111561233257600081556001016123ff565b6001600160a01b038116811461085957600080fd5b803561243381612413565b919050565b60006020828403121561244a57600080fd5b813561245581612413565b9392505050565b6001600160a01b0391909116815260200190565b60008060006060848603121561248557600080fd5b833561249081612413565b9250602084013560ff811681146124a657600080fd5b915060408401356124b681612413565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612500576125006124c1565b604052919050565b600082601f83011261251957600080fd5b6040516040810181811067ffffffffffffffff8211171561253c5761253c6124c1565b806040525080604084018581111561255357600080fd5b845b8181101561256d578035835260209283019201612555565b509195945050505050565b60006040828403121561258a57600080fd5b6124558383612508565b6000602082840312156125a657600080fd5b5035919050565b60008060008060008060c087890312156125c657600080fd5b86356125d181612413565b955060208701356125e181612413565b945060408701356125f181612413565b9350606087013561260181612413565b92506080870135915060a087013561261881612413565b809150509295509295509295565b600082601f83011261263757600080fd5b8135602067ffffffffffffffff821115612653576126536124c1565b8160051b6126628282016124d7565b928352848101820192828101908785111561267c57600080fd5b83870192505b8483101561224f57823561269581612413565b82529183019190830190612682565b801515811461085957600080fd5b8035612433816126a4565b600080600080600060c086880312156126d557600080fd5b853567ffffffffffffffff808211156126ed57600080fd5b818801915088601f83011261270157600080fd5b8135602082821115612715576127156124c1565b612727601f8301601f191682016124d7565b8281528b8284870101111561273b57600080fd5b8282860183830137600092810182019290925290975088013591508082111561276357600080fd5b5061277088828901612626565b9450506127808760408801612508565b925061278e60808701612428565b915061279c60a087016126b2565b90509295509295909350565b60005b838110156127c35781810151838201526020016127ab565b838111156121625750506000910152565b600081518084526127ec8160208601602086016127a8565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156128395781516001600160a01b031687529582019590820190600101612814565b509495945050505050565b6001600160a01b0389811682526101006020830181905260009161286a8483018c6127d4565b91508960408501528089166060850152808816608085015283820360a08501526128948288612800565b951660c0840152505060e001529695505050505050565b600080604083850312156128be57600080fd5b8235915060208301356128d081612413565b809150509250929050565b6000602082840312156128ed57600080fd5b5051919050565b6001600160a01b03929092168252602082015260400190565b6020808252600d908201526c24b73b30b634b2103a37b5b2b760991b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60408101818360005b6002811015612972578154835260209092019160019182019101612953565b50505092915050565b60208082526016908201527524b73b30b634b21034b6b83632b6b2b73a30ba34b7b760511b604082015260600190565b9283526001600160a01b03919091166020830152604082015260600190565b6020808252600f908201526e496e76616c6964206164647265737360881b604082015260600190565b6020808252600b908201526a125b9d985b1a590813919560aa1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115612a4157612a41612a18565b500190565b600060018201612a5857612a58612a18565b5060010190565b6000610140808352612a738184018d6127d4565b9050602060018060a01b03808d16828601528483036040860152612a97838d612800565b8b82166060870152908a166080860152925060a0840191508760005b6002811015612ad057815184529282019290820190600101612ab3565b5050506001600160a01b03861660e0840152506001600160a01b0384166101008301526001600160a01b0383166101208301529a9950505050505050505050565b60008251612b238184602087016127a8565b9190910192915050565b6000610120808352612b418184018d6127d4565b90508a60208401528960408401528281036060840152612b61818a612800565b6001600160a01b03988916608085015296881660a0840152505092851660c0840152931660e082015291151561010090920191909152949350505050565b600181811c90821680612bb357607f821691505b602082108103612bd357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215612c3657600080fd5b8151612455816126a4565b60208152600061245560208301846127d456fea2646970667358221220c106b918c2c5ff125a817b3501e847ba8f2aa7d09ec3e0fc0accb135c000440464736f6c634300080e0033",
  "deployedBytecode": "0x6080604052600436106102235760003560e01c806376b9a7611161012e578063ba64248e116100ab578063e43252d71161006f578063e43252d7146106c5578063e744092e146106e5578063f083b09614610727578063f0f4426014610747578063f2fde38b1461076757600080fd5b8063ba64248e14610618578063c4c7154214610638578063d3cbde3114610658578063d432442c14610685578063dddc9ede146106a557600080fd5b80639b19251a116100f25780639b19251a14610518578063a3603a8e14610558578063ac9a0b2614610578578063b41e991a146105ae578063b81155b5146105e457600080fd5b806376b9a761146104915780638ab1d681146104b15780638abdf5aa146104d15780638c42aea8146104e75780638da5cb5b146104fa57600080fd5b80634cd2c83b116101bc5780635cdf76f8116101805780635cdf76f8146103fc57806361d027b31461041c578063649cc8d21461043c578063715018a61461045c5780637404b8441461047157600080fd5b80634cd2c83b1461036657806352f4c6101461037c57806353c425c11461039c578063555d6331146103bc5780635ace5813146103dc57600080fd5b8062ae3bf81461022f57806301a362a8146102515780630848818b1461028757806317ce4f1e146102a757806319a0bc4a146102c757806319fca468146102e657806328879a65146103065780632f5e2b1c1461032657806336c324aa1461034657600080fd5b3661022a57005b600080fd5b34801561023b57600080fd5b5061024f61024a366004612438565b610787565b005b34801561025d57600080fd5b50606e54610271906001600160a01b031681565b60405161027e919061245c565b60405180910390f35b34801561029357600080fd5b5061024f6102a2366004612438565b61085c565b3480156102b357600080fd5b5061024f6102c2366004612438565b6108c0565b3480156102d357600080fd5b506073545b60405190815260200161027e565b3480156102f257600080fd5b50606854610271906001600160a01b031681565b34801561031257600080fd5b5061024f610321366004612470565b61097b565b34801561033257600080fd5b5061024f610341366004612438565b610af3565b34801561035257600080fd5b5061024f610361366004612578565b610b8d565b34801561037257600080fd5b506102d860705481565b34801561038857600080fd5b5061024f610397366004612594565b610c38565b3480156103a857600080fd5b5061024f6103b73660046125ad565b610cc1565b3480156103c857600080fd5b50606a54610271906001600160a01b031681565b3480156103e857600080fd5b50606d54610271906001600160a01b031681565b34801561040857600080fd5b5061024f610417366004612594565b610fd6565b34801561042857600080fd5b50606c54610271906001600160a01b031681565b34801561044857600080fd5b5061024f610457366004612438565b611022565b34801561046857600080fd5b5061024f61109b565b34801561047d57600080fd5b5061024f61048c366004612438565b6110af565b34801561049d57600080fd5b5061024f6104ac366004612438565b611128565b3480156104bd57600080fd5b5061024f6104cc366004612438565b6111a1565b3480156104dd57600080fd5b506102d8606b5481565b6102716104f53660046126bd565b6111ff565b34801561050657600080fd5b506033546001600160a01b0316610271565b34801561052457600080fd5b50610548610533366004612438565b60746020526000908152604090205460ff1681565b604051901515815260200161027e565b34801561056457600080fd5b50606954610271906001600160a01b031681565b34801561058457600080fd5b50610271610593366004612594565b6065602052600090815260409020546001600160a01b031681565b3480156105ba57600080fd5b506102716105c9366004612438565b6076602052600090815260409020546001600160a01b031681565b3480156105f057600080fd5b506106046105ff366004612594565b611926565b60405161027e989796959493929190612844565b34801561062457600080fd5b50606f54610271906001600160a01b031681565b34801561064457600080fd5b5061024f610653366004612438565b611b11565b34801561066457600080fd5b506102d8610673366004612594565b60666020526000908152604090205481565b34801561069157600080fd5b506102d86106a0366004612594565b611b8a565b3480156106b157600080fd5b50606754610271906001600160a01b031681565b3480156106d157600080fd5b5061024f6106e0366004612438565b611ba1565b3480156106f157600080fd5b50610715610700366004612438565b60756020526000908152604090205460ff1681565b60405160ff909116815260200161027e565b34801561073357600080fd5b5061024f6107423660046128ab565b611c00565b34801561075357600080fd5b5061024f610762366004612438565b611cb8565b34801561077357600080fd5b5061024f610782366004612438565b611d31565b61078f611da7565b6001600160a01b0381166107d1576040514790339082156108fc029083906000818181858888f193505050501580156107cc573d6000803e3d6000fd5b505050565b6040516370a0823160e01b81526000906001600160a01b038316906370a082319061080090309060040161245c565b602060405180830381865afa15801561081d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084191906128db565b90506108576001600160a01b0383163383611e01565b505b50565b610864611da7565b606a80546001600160a01b0319166001600160a01b038316908117909155606b546040517fff99838ad48c26fbba7c9103c33d60b6e6fe5c9e3e5f82592ffcea51777fccec926108b59290916128f4565b60405180910390a150565b6108c8611da7565b6001600160a01b03811615806108e45750803b63ffffffff1615155b6109305760405162461bcd60e51b815260206004820152601860248201527724b73b30b634b2103234b9b1b7bab73a1036b0b730b3b2b960411b60448201526064015b60405180910390fd5b606e80546001600160a01b0319166001600160a01b0383161790556040517fcbcaef6e2a342ec0705123d095e73fc9a8f2f790ce0e650e02c4e5f7c4b5592e906108b590839061245c565b610983611da7565b6001600160a01b0383166109a95760405162461bcd60e51b81526004016109279061290d565b60038260ff16106109eb5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964207479706560a01b6044820152606401610927565b8160ff166002141580610a0657506001600160a01b03811615155b610a445760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b2103bb930b83832b960891b6044820152606401610927565b6001600160a01b0383166000908152607560205260409020805460ff191660ff8416908117909155600203610aa2576001600160a01b03838116600090815260766020526040902080546001600160a01b0319169183169190911790555b604080516001600160a01b03858116825260ff8516602083015283168183015290517f1a4315afbcea26ce22c71adfd073587f9d492f5b5d22b26f4bd11e6261a32ecb9181900360600190a1505050565b610afb611da7565b6001600160a01b038116610b425760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd85b1b195d60921b6044820152606401610927565b606f80546001600160a01b0319166001600160a01b0383161790556040517f04d877fc28d5266225dad2da3d458a663d3853e0d3505280c683cc9e0610b544906108b590839061245c565b610b95611da7565b80516103e810801590610bae575060208101516103e810155b610bfa5760405162461bcd60e51b815260206004820152601b60248201527f666565206c696d69742063616e6e6f74206578636565642031302500000000006044820152606401610927565b610c0760718260026122f8565b507ffe4aca700e50d38da718a7188ff6eb9ac0e00d3a16d12313c1202a5906900e2c60716040516108b5919061294a565b610c40611da7565b607154811115610c8c5760405162461bcd60e51b81526020600482015260176024820152761999594818d85b9b9bdd08195e18d95959081b1a5b5a5d604a1b6044820152606401610927565b60708190556040518181527fddec4ff3a78fea0be6868ce5c32d8ac94ad2a87d6100339cc7415e72e9f67f5f906020016108b5565b600054610100900460ff1615808015610ce15750600054600160ff909116105b80610cfb5750303b158015610cfb575060005460ff166001145b610d5e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610927565b6000805460ff191660011790558015610d81576000805461ff0019166101001790555b6001600160a01b038716610da75760405162461bcd60e51b81526004016109279061297b565b6001600160a01b038616610df15760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081a5b99195e08139195607a1b6044820152606401610927565b6001600160a01b038516610e3e5760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a590819195c1b1bde595c8813919560621b6044820152606401610927565b610e46611e57565b606d805473e91816fde9dbcf834125a17cf3a22735bee15a2b6001600160a01b031991821617909155606f805473e1f1dd010bbc2860f81c8f90ea4e38db949bb16f908316179055601960708190556071556064607255606a805482166001600160a01b0387811691909117909155606b859055606c80548316858316908117909155606980548416909117905560678054831689831617905560688054831688831617905560008080527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b8054909316918a1691909117909155606660205260017f6f48904484b35701cf1f41ad9068b394adf7e2f8a59d2309a04d10a155eaa72b8190556040517fbac8f345f4aec25f8181306d1e285bd71897176374cea36669605788ca57b29592610f7f9290918b91906129ab565b60405180910390a18015610fcd576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b610fde611da7565b606b819055606a546040517fff99838ad48c26fbba7c9103c33d60b6e6fe5c9e3e5f82592ffcea51777fccec916108b5916001600160a01b039091169084906128f4565b61102a611da7565b6001600160a01b0381166110505760405162461bcd60e51b8152600401610927906129ca565b606d80546001600160a01b0319166001600160a01b0383161790556040517feffeb6d84590144cbff5304be4487d09001a14ab33344037bafcf8129f1cb851906108b590839061245c565b6110a3611da7565b6110ad6000611e86565b565b6110b7611da7565b6001600160a01b0381166110dd5760405162461bcd60e51b8152600401610927906129f3565b606780546001600160a01b0319166001600160a01b0383161790556040517ff7b003cc430c1bd951f3513f1b4524bd8974b4ccf0f8173e04c8672c3174bea9906108b590839061245c565b611130611da7565b6001600160a01b0381166111565760405162461bcd60e51b8152600401610927906129ca565b606980546001600160a01b0319166001600160a01b0383161790556040517fb4373cff5122ed52c1a5960d3077d20384021b17809e515753de92bd47db9066906108b590839061245c565b6111a9611da7565b6001600160a01b0381166000818152607460209081526040808320805460ff19169055519182527fa54714518c5d275fdcd3d2a461e4858e4e8cb04fb93cd0bca9d6d34115f2644091015b60405180910390a250565b600080805260656020527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b5481906001600160a01b03166112785760405162461bcd60e51b8152602060048201526013602482015272139bdd081a5b9a5d1a585b1a5e9959081e595d606a1b6044820152606401610927565b6005865111156112bf5760405162461bcd60e51b8152602060048201526012602482015271115e18d95959081d1bdad95b881b1a5b5a5d60721b6044820152606401610927565b6071548551118015906112d85750607254602086015111155b61131d5760405162461bcd60e51b815260206004820152601660248201527510d85b9b9bdd08195e19595908199959481b1a5b5a5d60521b6044820152606401610927565b60005b86518110156114385761135387828151811061133e5761133e612934565b602002602001015163ffffffff903b16151590565b61136f5760405162461bcd60e51b81526004016109279061290d565b600061137c826001612a2e565b90505b87518110156114255787818151811061139a5761139a612934565b60200260200101516001600160a01b03168883815181106113bd576113bd612934565b60200260200101516001600160a01b0316036114135760405162461bcd60e51b815260206004820152601560248201527421b0b73737ba103ab9b29039b0b6b2903a37b5b2b760591b6044820152606401610927565b8061141d81612a46565b91505061137f565b508061143081612a46565b915050611320565b503360009081526074602052604090205460ff1661145857611458611ed8565b60003387518860008151811061147057611470612934565b6020908102919091018101516040516bffffffffffffffffffffffff19606095861b811693820193909352603481019390935290921b909116605482015243606882015242608882015260a80160408051601f198184030181529181528151602092830120600085815260659093529120549091506114f8906001600160a01b031682611f8b565b92506000836001600160a01b031689606d60009054906101000a90046001600160a01b03168a606760009054906101000a90046001600160a01b0316606860009054906101000a90046001600160a01b03168c606960009054906101000a90046001600160a01b0316338e60405160240161157b99989796959493929190612a5f565b60408051601f198184030181529181526020820180516001600160e01b0316634ad5eda960e11b179052516115b09190612b11565b6000604051808303816000865af19150503d80600081146115ed576040519150601f19603f3d011682016040523d82523d6000602084013e6115f2565b606091505b505090508061163b5760405162461bcd60e51b8152602060048201526015602482015274125b9a5d1a585b1a5e985d1a5bdb8819985a5b1959605a1b6044820152606401610927565b60675460405163658bbd8f60e11b81526001600160a01b038681166004830152600160248301529091169063cb177b1e90604401600060405180830381600087803b15801561168957600080fd5b505af115801561169d573d6000803e3d6000fd5b505060685460405163658bbd8f60e11b81526001600160a01b03888116600483015260016024830152909116925063cb177b1e9150604401600060405180830381600087803b1580156116ef57600080fd5b505af1158015611703573d6000803e3d6000fd5b505060408051610120810182526001600160a01b03888116825260208083018f81528385018a905260008a81526066835294852054606085015260675483166080850152606854831660a085015260c084018f90523360e08501524261010085015260738054600181018255955283517ff79bde9ddd17963ebce6f7d021d60de7c2bd0db944d23c900c0c0e775f530052600990960295860180546001600160a01b031916919094161783555180519396509194506117e7937ff79bde9ddd17963ebce6f7d021d60de7c2bd0db944d23c900c0c0e775f5300530192910190612336565b50604082015160028201556060820151600382015560808201516004820180546001600160a01b039283166001600160a01b03199182161790915560a084015160058401805491909316911617905560c082015180516118519160068401916020909101906123a9565b5060e08201518160070160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061010082015181600801555050836001600160a01b03167fc59d004b0160f568218f7a6c1d8e7f3ece03e1dbff3fd0c31fbfcd1cb013542a8a8560666000888152602001908152602001600020548c606760009054906101000a90046001600160a01b0316606860009054906101000a90046001600160a01b0316338e8e60405161191299989796959493929190612b2d565b60405180910390a250505095945050505050565b6000606060008060006060600080600060738a8154811061194957611949612934565b600091825260209182902060408051610120810190915260099092020180546001600160a01b03168252600181018054929391929184019161198a90612b9f565b80601f01602080910402602001604051908101604052809291908181526020018280546119b690612b9f565b8015611a035780601f106119d857610100808354040283529160200191611a03565b820191906000526020600020905b8154815290600101906020018083116119e657829003601f168201915b50505091835250506002820154602080830191909152600383015460408084019190915260048401546001600160a01b039081166060850152600585015416608084015260068401805482518185028101850190935280835260a0909401939192909190830182828015611aa057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611a82575b505050918352505060078201546001600160a01b031660208083019190915260089092015460409182015282519183015190830151608084015160a085015160c086015160e08701516101009790970151959f50939d50919b50995097509550909350915050919395975091939597565b611b19611da7565b6001600160a01b038116611b3f5760405162461bcd60e51b8152600401610927906129f3565b606880546001600160a01b0319166001600160a01b0383161790556040517fd9b677b9c9b93164c658b14fa5a5d48912dbd03c690acb1cff638697159aabcd906108b590839061245c565b60718160028110611b9a57600080fd5b0154905081565b611ba9611da7565b6001600160a01b038116600081815260746020908152604091829020805460ff1916600190811790915591519182527fa54714518c5d275fdcd3d2a461e4858e4e8cb04fb93cd0bca9d6d34115f2644091016111f4565b611c08611da7565b803b63ffffffff16611c2c5760405162461bcd60e51b81526004016109279061297b565b600082815260656020908152604080832080546001600160a01b0319166001600160a01b0386161790556066909152902054611c69906001612a2e565b60008381526066602052604090819020829055517fbac8f345f4aec25f8181306d1e285bd71897176374cea36669605788ca57b29591611cac91859185916129ab565b60405180910390a15050565b611cc0611da7565b6001600160a01b038116611ce65760405162461bcd60e51b8152600401610927906129ca565b606c80546001600160a01b0319166001600160a01b0383161790556040517fc714d22a2f08b695f81e7c707058db484aa5b4d6b4c9fd64beb10fe85832f608906108b590839061245c565b611d39611da7565b6001600160a01b038116611d9e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610927565b61085981611e86565b6033546001600160a01b031633146110ad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610927565b6107cc8363a9059cbb60e01b8484604051602401611e209291906128f4565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612028565b600054610100900460ff16611e7e5760405162461bcd60e51b815260040161092790612bd9565b6110ad6120fa565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606a546001600160a01b0316611f6757606b54341015611f2b5760405162461bcd60e51b815260206004820152600e60248201526d4e6f7420656e6f7567682066656560901b6044820152606401610927565b606c54606b546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610859573d6000803e3d6000fd5b606c54606b54606a546110ad926001600160a01b039182169233929091169061212a565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166120225760405162461bcd60e51b8152602060048201526017602482015276115490cc4c4d8dce8818dc99585d194c8819985a5b1959604a1b6044820152606401610927565b92915050565b600061207d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121689092919063ffffffff16565b8051909150156107cc578080602001905181019061209b9190612c24565b6107cc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610927565b600054610100900460ff166121215760405162461bcd60e51b815260040161092790612bd9565b6110ad33611e86565b6040516001600160a01b03808516602483015283166044820152606481018290526121629085906323b872dd60e01b90608401611e20565b50505050565b6060612177848460008561217f565b949350505050565b6060824710156121e05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610927565b600080866001600160a01b031685876040516121fc9190612b11565b60006040518083038185875af1925050503d8060008114612239576040519150601f19603f3d011682016040523d82523d6000602084013e61223e565b606091505b509150915061224f8783838761225a565b979650505050505050565b606083156122c95782516000036122c2576001600160a01b0385163b6122c25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610927565b5081612177565b61217783838151156122de5781518083602001fd5b8060405162461bcd60e51b81526004016109279190612c41565b8260028101928215612326579160200282015b8281111561232657825182559160200191906001019061230b565b506123329291506123fe565b5090565b82805461234290612b9f565b90600052602060002090601f0160209004810192826123645760008555612326565b82601f1061237d57805160ff1916838001178555612326565b82800160010185558215612326579182018281111561232657825182559160200191906001019061230b565b828054828255906000526020600020908101928215612326579160200282015b8281111561232657825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906123c9565b5b8082111561233257600081556001016123ff565b6001600160a01b038116811461085957600080fd5b803561243381612413565b919050565b60006020828403121561244a57600080fd5b813561245581612413565b9392505050565b6001600160a01b0391909116815260200190565b60008060006060848603121561248557600080fd5b833561249081612413565b9250602084013560ff811681146124a657600080fd5b915060408401356124b681612413565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612500576125006124c1565b604052919050565b600082601f83011261251957600080fd5b6040516040810181811067ffffffffffffffff8211171561253c5761253c6124c1565b806040525080604084018581111561255357600080fd5b845b8181101561256d578035835260209283019201612555565b509195945050505050565b60006040828403121561258a57600080fd5b6124558383612508565b6000602082840312156125a657600080fd5b5035919050565b60008060008060008060c087890312156125c657600080fd5b86356125d181612413565b955060208701356125e181612413565b945060408701356125f181612413565b9350606087013561260181612413565b92506080870135915060a087013561261881612413565b809150509295509295509295565b600082601f83011261263757600080fd5b8135602067ffffffffffffffff821115612653576126536124c1565b8160051b6126628282016124d7565b928352848101820192828101908785111561267c57600080fd5b83870192505b8483101561224f57823561269581612413565b82529183019190830190612682565b801515811461085957600080fd5b8035612433816126a4565b600080600080600060c086880312156126d557600080fd5b853567ffffffffffffffff808211156126ed57600080fd5b818801915088601f83011261270157600080fd5b8135602082821115612715576127156124c1565b612727601f8301601f191682016124d7565b8281528b8284870101111561273b57600080fd5b8282860183830137600092810182019290925290975088013591508082111561276357600080fd5b5061277088828901612626565b9450506127808760408801612508565b925061278e60808701612428565b915061279c60a087016126b2565b90509295509295909350565b60005b838110156127c35781810151838201526020016127ab565b838111156121625750506000910152565b600081518084526127ec8160208601602086016127a8565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156128395781516001600160a01b031687529582019590820190600101612814565b509495945050505050565b6001600160a01b0389811682526101006020830181905260009161286a8483018c6127d4565b91508960408501528089166060850152808816608085015283820360a08501526128948288612800565b951660c0840152505060e001529695505050505050565b600080604083850312156128be57600080fd5b8235915060208301356128d081612413565b809150509250929050565b6000602082840312156128ed57600080fd5b5051919050565b6001600160a01b03929092168252602082015260400190565b6020808252600d908201526c24b73b30b634b2103a37b5b2b760991b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60408101818360005b6002811015612972578154835260209092019160019182019101612953565b50505092915050565b60208082526016908201527524b73b30b634b21034b6b83632b6b2b73a30ba34b7b760511b604082015260600190565b9283526001600160a01b03919091166020830152604082015260600190565b6020808252600f908201526e496e76616c6964206164647265737360881b604082015260600190565b6020808252600b908201526a125b9d985b1a590813919560aa1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115612a4157612a41612a18565b500190565b600060018201612a5857612a58612a18565b5060010190565b6000610140808352612a738184018d6127d4565b9050602060018060a01b03808d16828601528483036040860152612a97838d612800565b8b82166060870152908a166080860152925060a0840191508760005b6002811015612ad057815184529282019290820190600101612ab3565b5050506001600160a01b03861660e0840152506001600160a01b0384166101008301526001600160a01b0383166101208301529a9950505050505050505050565b60008251612b238184602087016127a8565b9190910192915050565b6000610120808352612b418184018d6127d4565b90508a60208401528960408401528281036060840152612b61818a612800565b6001600160a01b03988916608085015296881660a0840152505092851660c0840152931660e082015291151561010090920191909152949350505050565b600181811c90821680612bb357607f821691505b602082108103612bd357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215612c3657600080fd5b8151612455816126a4565b60208152600061245560208301846127d456fea2646970667358221220c106b918c2c5ff125a817b3501e847ba8f2aa7d09ec3e0fc0accb135c000440464736f6c634300080e0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "rescueTokens(address)": {
        "params": {
          "_token": ": token address"
        }
      },
      "setAllowedToken(address,uint8,address)": {
        "params": {
          "flag": ": staked token address     0 - DISABLED      : Not supported.     1 - SWAPPABLE     : Swappable token with BNB.     2 - LIQUID_TOKEN  : Token can be converted to BNB by wrapping.",
          "token": ": staked token address",
          "wrapper": ": wrap contract for LSDs"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "allowedTokens(address)": {
        "notice": "0 - DISABLED      : Tokens are not accepted. 1 - SWAPPABLE   : Token swap possible directly to BNB. 2 - LIQUID_TOKEN  : Token can be converted to BNB by burning."
      },
      "rescueTokens(address)": {
        "notice": "Emergency withdraw tokens."
      },
      "setAllowedToken(address,uint8,address)": {
        "notice": "Initialize the contract"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 387,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 390,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 874,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 259,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 379,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 38013,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "implementation",
        "offset": 0,
        "slot": "101",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 38017,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "version",
        "offset": 0,
        "slot": "102",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 38020,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "indexNft",
        "offset": 0,
        "slot": "103",
        "type": "t_contract(IERC721)4743"
      },
      {
        "astId": 38023,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "deployerNft",
        "offset": 0,
        "slot": "104",
        "type": "t_contract(IERC721)4743"
      },
      {
        "astId": 38025,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "indexDefaultOwner",
        "offset": 0,
        "slot": "105",
        "type": "t_address"
      },
      {
        "astId": 38027,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "payingToken",
        "offset": 0,
        "slot": "106",
        "type": "t_address"
      },
      {
        "astId": 38029,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "serviceFee",
        "offset": 0,
        "slot": "107",
        "type": "t_uint256"
      },
      {
        "astId": 38031,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "treasury",
        "offset": 0,
        "slot": "108",
        "type": "t_address"
      },
      {
        "astId": 38033,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "swapAggregator",
        "offset": 0,
        "slot": "109",
        "type": "t_address"
      },
      {
        "astId": 38035,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "discountMgr",
        "offset": 0,
        "slot": "110",
        "type": "t_address"
      },
      {
        "astId": 38037,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "brewlabsWallet",
        "offset": 0,
        "slot": "111",
        "type": "t_address"
      },
      {
        "astId": 38039,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "brewlabsFee",
        "offset": 0,
        "slot": "112",
        "type": "t_uint256"
      },
      {
        "astId": 38043,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "feeLimits",
        "offset": 0,
        "slot": "113",
        "type": "t_array(t_uint256)2_storage"
      },
      {
        "astId": 38067,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "indexInfo",
        "offset": 0,
        "slot": "115",
        "type": "t_array(t_struct(IndexInfo)38063_storage)dyn_storage"
      },
      {
        "astId": 38071,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "whitelist",
        "offset": 0,
        "slot": "116",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 38076,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "allowedTokens",
        "offset": 0,
        "slot": "117",
        "type": "t_mapping(t_address,t_uint8)"
      },
      {
        "astId": 38080,
        "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
        "label": "wrappers",
        "offset": 0,
        "slot": "118",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(IndexInfo)38063_storage)dyn_storage": {
        "base": "t_struct(IndexInfo)38063_storage",
        "encoding": "dynamic_array",
        "label": "struct BrewlabsIndexFactory.IndexInfo[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)2_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[2]",
        "numberOfBytes": "64"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC721)4743": {
        "encoding": "inplace",
        "label": "contract IERC721",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint8)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint8)",
        "numberOfBytes": "32",
        "value": "t_uint8"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(IndexInfo)38063_storage": {
        "encoding": "inplace",
        "label": "struct BrewlabsIndexFactory.IndexInfo",
        "members": [
          {
            "astId": 38045,
            "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
            "label": "index",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 38047,
            "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 38049,
            "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
            "label": "category",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 38051,
            "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
            "label": "version",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 38053,
            "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
            "label": "indexNft",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 38055,
            "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
            "label": "deployerNft",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 38058,
            "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
            "label": "tokens",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 38060,
            "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
            "label": "deployer",
            "offset": 0,
            "slot": "7",
            "type": "t_address"
          },
          {
            "astId": 38062,
            "contract": "contracts/indexes/BrewlabsIndexFactory.sol:BrewlabsIndexFactory",
            "label": "createdAt",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}